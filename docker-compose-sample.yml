services:
  tor:
    container_name: btcstack_tor
    user: "${UID}:${GID}"
    build:
      context: ./dockerfiles/
      dockerfile: Dockerfile.tor
      args:
        UID: ${UID}
        GID: ${GID}
    volumes:
      - ./data/tor:/var/lib/tor/
      - ./configs/torrc:/etc/tor/torrc:ro
    restart: unless-stopped
    networks:
      - public-net

  bitcoin:
    container_name: btcstack_bitcoin
    user: "${UID}:${GID}"
    depends_on: [tor]
    build:
      context: ./dockerfiles/
      dockerfile: Dockerfile.bitcoin
      args:
        BITCOIN_ARCH: ${BITCOIN_ARCH}
        BITCOIN_CORE_VERSION: ${BITCOIN_CORE_VERSION}
        UID: ${UID}
        GID: ${GID}
    volumes:
      - ./data/bitcoin:/data/.bitcoin
      - ./data/tor:/data/cookie:ro
      - ./configs/bitcoin.conf:/data/.bitcoin/bitcoin.conf:ro
    restart: unless-stopped
    networks:
      - btc-net

  electrs:
    container_name: btcstack_electrs
    user: "${UID}:${GID}"
    depends_on: [bitcoin]
    build:
      context: ./dockerfiles/
      dockerfile: Dockerfile.electrs
      args:
        ELECTRS_VERSION: ${ELECTRS_VERSION}
        UID: ${UID}
        GID: ${GID}
    volumes:
      - ./configs/electrs.toml:/data/electrs.toml:ro
      - ./data/electrs:/data
      - ./data/bitcoin:/data/.bitcoin:ro
    restart: unless-stopped
    networks:
      - btc-net

  lnd:
    container_name: btcstack_lnd
    user: "${UID}:${GID}"
    depends_on: [bitcoin]
    build:
      context: ./dockerfiles/
      dockerfile: Dockerfile.lnd
      args:
        LND_ARCH: ${LND_ARCH}
        LND_VERSION: ${LND_VERSION}
        UID: ${UID}
        GID: ${GID}
    ports:
      - "8080:8080"
    volumes:
      - ./data/lnd:/data/.lnd
      - ./data/tor:/var/lib/tor:ro
      - ./data/bitcoin:/data/.bitcoin:ro
      - ./configs/lnd.conf:/data/.lnd/lnd.conf:ro
    environment:
      LND_PASSWORD: ${LND_PASSWORD}
    restart: unless-stopped
    networks:
      - btc-net

  rtl:
    container_name: btcstack_rtl
    user: "${UID}:${GID}"
    depends_on: [lnd]
    build:
      context: ./dockerfiles/
      dockerfile: Dockerfile.rtl
      args:
        UID: ${UID}
        GID: ${GID}
        RTL_VERSION: ${RTL_VERSION}
    environment:
      APP_PASSWORD: ${RTL_PASSWORD}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rtl.rule=Host(`${RTL_SUBDOMAIN}.${HOST}`)"
      - "traefik.http.services.rtl.loadbalancer.server.port=8081"
    volumes:
      - ./configs/rtl.json:/data/RTL/RTL-Config.json
      - ./configs/lnd.conf:/data/lnd.conf:ro
      - ./data/lnd:/data/.lnd:ro
      - ./data/rtl:/data/rtldb
    restart: unless-stopped
    networks:
      - public-net
      - btc-net

  lnbits:
     container_name: rainbow_lnbits
     # depends_on: [lnd, lnbits-db]
     depends_on: [lnd]
     image: lnbits/lnbits:v0.12.12@sha256:739512d10c10535bdb53ab363640f02f95e3f857b64af401d48991d3cf2e43a8
     init: true
     restart: unless-stopped
     stop_grace_period: 1m
     environment:
       ## Global
       LNBITS_HOST: "0.0.0.0"
       LNBITS_PORT: ${LNBITS_PORT}
       LNBITS_ADMIN_UI: "true"
       ## App
       LNBITS_SITE_TITLE: "LNbits"
       LNBITS_DEFAULT_WALLET_NAME: "LNbits wallet"
       LNBITS_DATA_FOLDER: "/app/data" # TODO: Is this necessary when using postgres?
       ## LND
       LNBITS_BACKEND_WALLET_CLASS: LndRestWallet
       LND_REST_ENDPOINT: https://lnd:8080/ # TODO: update after making LND_PORT env var
       LND_REST_CERT: "/data/.lnd/tls.cert"
       LND_REST_MACAROON: "/data/.lnd/data/chain/bitcoin/mainnet/admin.macaroon" # TODO: make an env variable instead of "mainnet"
       ## Postgres
       # LNBITS_DATABASE_URL: "postgres://${LNBITS_POSTGRES_USER}:${LNBITS_POSTGRES_PASSWORD}@lnbits-db:5432/${LNBITS_POSTGRES_DB}"
     volumes:
       - ./data/lnbits/data:/app/data
       - ./configs/lnbits.env:/app/.env
       - ./data/lnd:/data/.lnd:ro
     ports:
      - "${LNBITS_PORT}:${LNBITS_PORT}"
     labels:
       traefik.enable: "true"
       traefik.http.routers.lnbits.rule: Host(`${LNBITS_SUBDOMAIN}${HOST}`)
       traefik.http.services.lnbits.loadbalancer.server.port: ${LNBITS_PORT}
     networks:
       - public-net
       - btc-net

networks:
  public-net:
    external: true
  btc-net:
